
import re
from V0.utils_ import TrieNode

class Rule:
    def __init__(self):
        self.root = TrieNode()

        #日期
        # self.DATE=r"^ \d{4}-\d{1,2}-\d{1,2} $| \d{4}/\d{1,2}/\d{1,2} | \d{4}.\d{1,2}.\d{1,2} |\d{4}-\d{1,2} |\d{1,2}-\d{1,2}| \d{4}/\d{1,2} | \d{1,2}/\d{1,2}| \d{4}.\d{1,2} |\d{1,2}.\d{1,2} | \d{4}年 | \d{1,2}月 | \d{1,2}日 $" 
        self.DATE = [ 
            r"(?<![\d])([1-9][\d]{2,3}|[\d]{2})([./-])(1[0-2]|0?[1-9])([./-])(3[0-1]|[1-2][\d]|0?[1-9])(?![\d])",
            r"(?<![\d])([1-9][\d]{2,3}|[\d]{2})([年])(1[0-2]|0?[1-9])([月])(3[0-1]|[1-2][\d]|0?[1-9])(号|日)",
            r"(?<![\d])([1-9][\d]{2,3}|[\d]{2})([年])",
            r"(?<![\d])([1-9][\d]{2,3}|[\d]{2})([./-])(1[0-2]|0?[1-9])(?![\d])",
            r"(?<![\d])([1-9][\d]{2,3}|[\d]{2})([年])(1[0-2]|0?[1-9])([月])",
            r"(?<![\d])(1[0-2]|0?[1-9])([月])",
            r"(?<![\d])(1[0-2]|0?[1-9])([./-])(3[0-1]|[1-2][\d]|0?[1-9])(?![\d])",
            r"(?<![\d])(1[0-2]|0?[1-9])([月])(3[0-1]|[1-2][\d]|0?[1-9])(号|日)",
            r"(?<![\d])(3[0-1]|[1-2][\d]|0?[1-9])(号|日)",
            r"(?<![\d])([1-9][\d]{1,3})(世纪|年代|年初|年中|年末)"]
                      
        #时间
        # self.TIME=r" \d{1,2}点| \d{1,2}分 | \d{12}秒 |^ \d{1,2}:\d{1,2}$ | \d{1,2}:\d{1,2}:\d{1,2} "
        self.TIME = [
            r"(?<![\d])(1[\d]|2[0-3]|0?[\d])([点时])([1-5][\d]|0?[\d])([分])([1-5][\d]|0?[\d])([秒])",
            r"(?<![\d])(1[\d]|2[0-3]|0?[\d])([:])([1-5][\d]|0?[\d])([:])([1-5][\d]|0?[\d])(?![\d])",
            r"(?<![\d])(1[\d]|2[0-3]|0?[\d])([点时])([1-5][\d]|0?[\d])([分])",
            r"(?<![\d])(1[\d]|2[0-3]|0?[\d])([:])([1-5][\d]|0?[\d])(?![\d])",
            r"(?<![\d])(1[\d]|2[0-3]|0?[\d])([点时])",
            r"(?<![\d])([1-5][\d]|0?[\d])([分])([1-5][\d]|0?[\d])([秒])",
            r"(?<![\d])([1-5][\d]|0?[\d])([:])([1-5][\d]|0?[\d])(?![\d])",
            r"(?<![\d])([1-5][\d]|0?[\d])([分])",
            r"(?<![\d])([1-5][\d]|0?[\d])([秒])",
            r"((?i)am|pm)"]
        #量词
        self.QUANTIFIER = [
            r"(?<![\d,])([1-9][\d]{0,2}(?:,[\d]{3}|[1-9][\d]*)([.][\d]+)?)(肚子|个|串|代|件|份|伙|位|册|列|则|副|劈|勺|匹|双|口|句|只|台|名|场|块|堂|堆|声|头|套|家|对|封|层|帮|幅|幢|床|座|张|弯|截|所|扇|手|把|担|挂|挑|挺|捆|捧|摞|撮|支|本|朵|杆|束|条|杯|枚|枝|架|栋|株|根|桶|棵|次|段|滩|滴|点|片|瓶|盆|盏|盒|盘|碗|秆|种|章|笔|篇|类|粒|线|组|群|股|脸|艘|节|袋|身|轮|辆|道|部|锅|门|间|阵|集|面|顶|项|顿|颗|首)"]
        #实数
        self.REAL = [
            r"(?<![\d,.])(([1-9][\d]{0,2}(?:,[\d]{3})|[1-9][\d]*)[.][\d]+)(?![\d.])",
            r"(?<![\d,.])([1-9][\d]{0,2}(?:,[\d]{3})|[1-9][\d]*)(?![\d.])"]
        #电报数字
        self.DIGIT = [
            r"(?<![\d])([(]?0[\d]{2,3}[)]?)([-])([1-9][\d]{6,7})(?![\d])",
            r"(?<![\d])([1](([3][0-9])|([4][5-9])|([5][0-35-9])|([6][56])|([7][0-8])|([8][0-9])|([9][189]))[\d]{8})(?![\d])",
            r"(?<![\d])([1-9][\d]{5})(?![\d])"]
        #通讯
        self.ELECTRONIC = [
            # r"(((ht|f)tps?)([:]//)([\w-]+([.][\w-]+)+([\w-.,@?^=%&:/~+#]*[\w-@?^=%&/~+#])?))",
            r"(([a-zA-Z\0_-]+)(@)([a-zA-Z\d_-]+([.][a-zA-Z\d_-]+)+))",
            r"((1[\d]{2}|2[0-4]\d|25[0-5]|[1-9]\d|[1-9])(([.](1[\d]{2}|2[0-4][\d]|25[0-5]|[1-9][\d]|[\d])){3}))",
            # 下面这两行有问题
            r"(?<![a-zA-Z])([a-zA-Z]:(((\\(?! )[^/:*?<>\"|\\]+)+\\?)|(\\)?))(?![a-zA-Z])",
            r"(?<![a-zA-Z])([a-zA-Z]:(((/(?! )[^/:*?<>\"|\\]+)+/?)|(/)?))(?![a-zA-Z])",
            # 自己加了一行网址
            r"https?://(?:[-\w.]|(?:%[\da-fA-F]{2}))+"]
        #地址
        self.ADDRESS = [
            # r"((?<=街道|小区|社区|区|镇|市|省|路|街|里)(?:[\D]{0,20})([\d]+)(号)([\d]+)(号楼?)([\d]+)(单元)([\d]+)(室|号|户)?)",
            # r"((?<=街道|小区|社区|区|镇|市|省|路|街|里)(?:[\D]{0,20})([\d]+)(号楼?)([\d]+)(单元)([\d]+)(室|号|户)?)",
            # r"((?<=街道|小区|社区|区|镇|市|省|路|街|里)(?:[\D]{0,20})([\d]+)(号楼?)([\d]+)(室|号|户)?)",
            r"((?<=镇|乡|村)(?:[\D]{0,10})([\d]+)(组|屯)([\d]+)(号))",
            r"(国道|省道|县道|乡道)([GSXY]?[\d]+)(?![\d])",
            r"(?<![\d])([\d]+)(国道|省道|县道|乡道)",
            r"(国道|省道|县道|乡道)([GSXY]?[\d]+)第([1-9][\d]*)(出口|入口)"]
        #分数
        self.FRANCTION = [
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)([/:-~])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(?![\d])"]
        #度量衡
        self.MEASURE = [
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(kg|g|m|L|m^3)",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(kg|g|m|L|m^3)"]
        #百分数
        self.PERSENT = [
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(%)",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(%)",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(‰)",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(‰)",
            r"(?<![\d])([-])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(%)",
            r"(?<![\d])([-])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(%)",
            r"(?<![\d])([-])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(‰)",
            r"(?<![\d])([-])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(‰)"]
        #货币
        self.MONEY = [
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(美元|港币|元)",
            r"(￥|＄|￡)([1-9][\d]{0,2}(?:,[\d]{3})+[.][\d]+|[1-9][\d]*[.][\d]+)(?![\d])",
            r"(?<![\d])([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(美元|港币|元)",
            r"(￥|＄|￡)([1-9][\d]{0,2}(?:,[\d]{3})+|[1-9][\d]*)(?![\d])"]
        #证件号码
        self.NO = [
            r"((?i)no.?)([\d]+)",
            r"([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])",
            r"(?<![\d])([1-9])([\d]{14}|[\d]{18})(?![\d])",
            r"(?<![a-zA-Z\d])([a-zA-Z\d]{10}|42[\d]{8}|16[\d]{8}|A[\d]{12})(?![a-zA-Z\d])",
            r"(?<![a-zA-Z\d])([a-zA-Z\d-]{4,35})(?![a-zA-Z\d])",
            r"(?<![\d])((888|588|688|468|568|668|768|868|968)([\d]{9})|(11|12)[\d]{10}|STO[\d]{10}|(37|33|11|22|44|55|66|77|88|99)[\d]{11}|4[\d]{11})(?![\d])",
            r"(?<![a-zA-Z\d])([A-Z]{2}[\d]{9}[A-Z]{2}|10[\d]{11}|11[\d]{11}|50[\d]{11}|51[\d]{11}|95[\d]{11}|97[\d]{11})(?![a-zA-Z\d])",
            r"(?<![\d])((1[\d]|5[058]|66|8[08]|3[19]|77)[\d]{11}|[\d]{13})(?![\d])"]
        #英文单词
        self.ENGLISH = [
            r"(?<![a-zA-Z])([a-zA-Z']+)(?![a-zA-Z])"]
        #标点
        self.PUNC = [
            r"([\r\n]+)"]
            # r"([^\r\n]+)"]
        #英数混合
        self.MIXTURE = [
            r"(?<![a-zA-Z])([a-zA-Z'\d]+)(?![a-zA-Z\d])"]
        #设备编号
        self.EQUIPMENT = [
            r"(?<![A-Z\d])([A-Z]{2}|[A-Z][\d]|[\d][A-Z])([\s]?[\d]{3,4})(?![\d])",
            r"(?<![A-Z])([A-Z]+[-]?[\d]+)(?![\d])",
            r"(?<![a-zA-Z\d])([a-zA-Z]+[\d]+[\s]+[\d]+[a-zA-Z]*)(?![\d])",
            # r"(?<=户型[\D]{0,10})([\d][-][\d][-][\d][-][\d])(?![\d])",
            r"(?<![A-Z])(([TKDGCLZAY]|[1-7])[\d]{1,4})(?![\d])"]
        #电话号码
        # self.TELEPHONE=r"((\d{11})|^((\d{7,8})|(\d{4}|\d{3})-(\d{7,8})|(\d{4}|\d{3})-(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1})|(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1}))$)"


        #类型字典 （without CHINESE character）
        self.target_dict = {"DATE": self.DATE, "TIME": self.TIME, "QUANTIFIER": self.QUANTIFIER, 
                            "REAL": self.REAL, "DIGIT": self.DIGIT, "ELECTRONIC": self.ELECTRONIC, 
                            "ADDRESS": self.ADDRESS, "FRANCTION": self.FRANCTION, "MEASURE": self.MEASURE, 
                            "PERSENT": self.PERSENT, "MONEY": self.MONEY, "NO": self.NO, "ENGLISH": self.ENGLISH,
                            "PUNC": self.PUNC, "MIXTURE": self.MIXTURE, "EQUIPMENT": self.EQUIPMENT}

    def match(self, sub_sentence):

        # print('CHECK sub_sentence IN match OF Rule:', sub_sentence)

        rule_label = []
        for name, rule_re_exp in self.target_dict.items():

            # print('CHECK RULE name IN match OF Rule:', name)
            res = re.search(rule_re_exp, sub_sentence)
            if res:
                rule_label.append(name)
        return rule_label


    def get_lexicon(self, sentence):
        result = []
        # print('CEHCK sentence IN get_lexicon OF Rule:', sentence)
        for name, rule_re_exps in self.target_dict.items():
            for rule_re_exp in rule_re_exps:
                # print('CHECK rule_re_exp:', rule_re_exp)
                pattern = re.compile(rule_re_exp)
                res = pattern.finditer(sentence)
                for m in res:
                    # print('CEHCK START POSITION: ', m.span()[0])
                    # print('CEHCK END POSITION: ', m.span()[1])
                    # print('CEHCK SUB-SENTENCE: ', sentence[m.span()[0]:m.span()[1]])
                    result.append([m.span()[0], m.span()[1], sentence[m.span()[0]:m.span()[1]], name])

        # for i in range(len(sentence)):
        #     # current = self.root
        #     for j in range(i, len(sentence)):

        #         # current = current.children.get(sentence[j])
        #         # print('CHECK current IN get_lexicon OF Rule:', current)
        #         match_result = self.match(sentence[i:j+1])
        #         # if current is None:
        #         #     break
        #         if match_result != []:
        #             result.append(([ i, j, sentence[i:j+1] ], match_result))

        return result
